.ie \n(.g .ds Aq \(aq
.el .ds Aq '
.TH SQ 1 0.28.0 Sequoia-PGP "User Commands"
.SH NAME
sq key generate \- Generates a new key
.SH SYNOPSIS
.br
\fBsq\fR [\fIGLOBAL OPTIONS\fR] \fBkey generate\fR [\fIOPTIONS\fR]  
.SH DESCRIPTION
Generates a new key.
.PP
Generating a key is the prerequisite to receiving encrypted messages
and creating signatures.  There are a few parameters to this process,
but we provide reasonable defaults for most users.
.PP
When generating a key, we also generate a revocation certificate.
This can be used in case the key is superseded, lost, or compromised.
It is a good idea to keep a copy of this in a safe place.
.PP
After generating a key, use "sq key extract\-cert" to get the
certificate corresponding to the key.  The key must be kept secure,
while the certificate should be handed out to correspondents, e.g. by
uploading it to a keyserver.
.PP


.SH OPTIONS
.SS "Global options"
.TP
\fB\-f\fR, \fB\-\-force\fR
Overwrites existing files
.TP
\fB\-\-help\fR
Print help information
.TP
\fB\-\-known\-notation\fR=\fINOTATION\fR
Adds NOTATION to the list of known notations
.TP
\fB\-\-output\-format\fR=\fIFORMAT\fR
Produces output in FORMAT, if possible
.TP
\fB\-\-output\-version\fR=\fIVERSION\fR
Produces output variant VERSION.
.TP
\fB\-\-version\fR
Print version information
.SS "Subcommand options"
.TP
\fB\-c\fR, \fB\-\-cipher\-suite\fR=\fICIPHER\-SUITE\fR
Selects the cryptographic algorithms for the key
.TP
\fB\-\-can\-authenticate\fR
Adds an authentication\-capable subkey (default)
.TP
\fB\-\-can\-encrypt\fR=\fIPURPOSE\fR
Adds an encryption\-capable subkey [default: universal]
.TP
\fB\-\-can\-sign\fR
Adds a signing\-capable subkey (default)
.TP
\fB\-\-cannot\-authenticate\fR
Adds no authentication\-capable subkey
.TP
\fB\-\-cannot\-encrypt\fR
Adds no encryption\-capable subkey
.TP
\fB\-\-cannot\-sign\fR
Adds no signing\-capable subkey
.TP
\fB\-\-creation\-time\fR=\fICREATION_TIME\fR
Sets the key\*(Aqs creation time to TIME (as ISO 8601)
.TP
\fB\-e\fR, \fB\-\-export\fR=\fIOUTFILE\fR
Writes the key to OUTFILE
.TP
\fB\-\-expires\fR=\fITIME\fR
Makes the key expire at TIME (as ISO 8601)
.TP
\fB\-\-expires\-in\fR=\fIDURATION\fR
Makes the key expire after DURATION (as N[ymwds]) [default: 5y]
.TP
\fB\-\-help\fR
Print help information
.TP
\fB\-\-rev\-cert\fR=\fIFILE or \-\fR
Writes the revocation certificate to FILE
.TP
\fB\-u\fR, \fB\-\-userid\fR=\fIEMAIL\fR
Adds a userid to the key
.TP
\fB\-\-version\fR
Print version information
.TP
\fB\-\-with\-password\fR
Protects the key with a password
.SH EXAMPLES
.PP

.PP
First, this generates a key
.PP
.nf
.RS
sq key generate \-\-userid "<juliet@example.org>" \-\-export juliet.key.pgp
.RE
.fi
.PP

.PP
Then, this extracts the certificate for distribution
.PP
.nf
.RS
sq key extract\-cert \-\-output juliet.cert.pgp juliet.key.pgp
.RE
.fi
.PP

.PP
Generates a key protecting it with a password
.PP
.nf
.RS
sq key generate \-\-userid "<juliet@example.org>" \-\-with\-password
.RE
.fi
.PP

.PP
Generates a key with multiple userids
.PP
.nf
.RS
sq key generate \-\-userid "<juliet@example.org>" \-\-userid "Juliet Capulet"
.RE
.fi
.SH "SEE ALSO"
.nh
\fBsq\fR(1).
.hy
.PP
For the full documentation see <https://docs.sequoia\-pgp.org/sq/>.
.SH VERSION
0.28.0 (sequoia\-openpgp 1.13.0, using Nettle)
